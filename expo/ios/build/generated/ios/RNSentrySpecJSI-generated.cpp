/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleCpp.js
 */

#include "RNSentrySpecJSI.h"

namespace facebook::react {

static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_addListener(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->addListener(
    rt,
    args[0].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_removeListeners(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->removeListeners(
    rt,
    args[0].asNumber()
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_addBreadcrumb(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->addBreadcrumb(
    rt,
    args[0].asObject(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_captureEnvelope(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->captureEnvelope(
    rt,
    args[0].asString(rt),
    args[1].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_captureScreenshot(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->captureScreenshot(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_clearBreadcrumbs(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->clearBreadcrumbs(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_crash(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->crash(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_closeNativeSdk(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->closeNativeSdk(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_disableNativeFramesTracking(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->disableNativeFramesTracking(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeRelease(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->fetchNativeRelease(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeSdkInfo(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->fetchNativeSdkInfo(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeDeviceContexts(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->fetchNativeDeviceContexts(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeAppStart(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->fetchNativeAppStart(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeFrames(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->fetchNativeFrames(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_initNativeSdk(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->initNativeSdk(
    rt,
    args[0].asObject(rt)
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_setUser(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->setUser(
    rt,
    args[0].isNull() || args[0].isUndefined() ? std::nullopt : std::make_optional(args[0].asObject(rt)),
    args[1].isNull() || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_setContext(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->setContext(
    rt,
    args[0].asString(rt),
    args[1].isNull() || args[1].isUndefined() ? std::nullopt : std::make_optional(args[1].asObject(rt))
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_setExtra(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->setExtra(
    rt,
    args[0].asString(rt),
    args[1].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_setTag(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->setTag(
    rt,
    args[0].asString(rt),
    args[1].asString(rt)
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_enableNativeFramesTracking(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->enableNativeFramesTracking(
    rt
  );
  return jsi::Value::undefined();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_fetchModules(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->fetchModules(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_fetchViewHierarchy(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->fetchViewHierarchy(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_startProfiling(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->startProfiling(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_stopProfiling(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->stopProfiling(
    rt
  );
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativePackageName(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  auto result = static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->fetchNativePackageName(
    rt
  );
  return result ? jsi::Value(std::move(*result)) : jsi::Value::null();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeStackFramesBy(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  auto result = static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->fetchNativeStackFramesBy(
    rt,
    args[0].asObject(rt).asArray(rt)
  );
  return result ? jsi::Value(std::move(*result)) : jsi::Value::null();
}
static jsi::Value __hostFunction_NativeRNSentryCxxSpecJSI_initNativeReactNavigationNewFrameTracking(jsi::Runtime &rt, TurboModule &turboModule, const jsi::Value* args, size_t count) {
  return static_cast<NativeRNSentryCxxSpecJSI *>(&turboModule)->initNativeReactNavigationNewFrameTracking(
    rt
  );
}

NativeRNSentryCxxSpecJSI::NativeRNSentryCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker)
  : TurboModule("RNSentry", jsInvoker) {
  methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeRNSentryCxxSpecJSI_addListener};
  methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeRNSentryCxxSpecJSI_removeListeners};
  methodMap_["addBreadcrumb"] = MethodMetadata {1, __hostFunction_NativeRNSentryCxxSpecJSI_addBreadcrumb};
  methodMap_["captureEnvelope"] = MethodMetadata {2, __hostFunction_NativeRNSentryCxxSpecJSI_captureEnvelope};
  methodMap_["captureScreenshot"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_captureScreenshot};
  methodMap_["clearBreadcrumbs"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_clearBreadcrumbs};
  methodMap_["crash"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_crash};
  methodMap_["closeNativeSdk"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_closeNativeSdk};
  methodMap_["disableNativeFramesTracking"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_disableNativeFramesTracking};
  methodMap_["fetchNativeRelease"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeRelease};
  methodMap_["fetchNativeSdkInfo"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeSdkInfo};
  methodMap_["fetchNativeDeviceContexts"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeDeviceContexts};
  methodMap_["fetchNativeAppStart"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeAppStart};
  methodMap_["fetchNativeFrames"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeFrames};
  methodMap_["initNativeSdk"] = MethodMetadata {1, __hostFunction_NativeRNSentryCxxSpecJSI_initNativeSdk};
  methodMap_["setUser"] = MethodMetadata {2, __hostFunction_NativeRNSentryCxxSpecJSI_setUser};
  methodMap_["setContext"] = MethodMetadata {2, __hostFunction_NativeRNSentryCxxSpecJSI_setContext};
  methodMap_["setExtra"] = MethodMetadata {2, __hostFunction_NativeRNSentryCxxSpecJSI_setExtra};
  methodMap_["setTag"] = MethodMetadata {2, __hostFunction_NativeRNSentryCxxSpecJSI_setTag};
  methodMap_["enableNativeFramesTracking"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_enableNativeFramesTracking};
  methodMap_["fetchModules"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_fetchModules};
  methodMap_["fetchViewHierarchy"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_fetchViewHierarchy};
  methodMap_["startProfiling"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_startProfiling};
  methodMap_["stopProfiling"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_stopProfiling};
  methodMap_["fetchNativePackageName"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativePackageName};
  methodMap_["fetchNativeStackFramesBy"] = MethodMetadata {1, __hostFunction_NativeRNSentryCxxSpecJSI_fetchNativeStackFramesBy};
  methodMap_["initNativeReactNavigationNewFrameTracking"] = MethodMetadata {0, __hostFunction_NativeRNSentryCxxSpecJSI_initNativeReactNavigationNewFrameTracking};
}


} // namespace facebook::react

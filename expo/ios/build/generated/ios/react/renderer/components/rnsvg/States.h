/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateStateH.js
 */
#pragma once

#ifdef ANDROID
#include <folly/dynamic.h>
#include <react/renderer/mapbuffer/MapBuffer.h>
#include <react/renderer/mapbuffer/MapBufferBuilder.h>
#endif

namespace facebook::react {

class RNSVGSvgViewAndroidState {
public:
  RNSVGSvgViewAndroidState() = default;

#ifdef ANDROID
  RNSVGSvgViewAndroidState(RNSVGSvgViewAndroidState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGCircleState {
public:
  RNSVGCircleState() = default;

#ifdef ANDROID
  RNSVGCircleState(RNSVGCircleState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGClipPathState {
public:
  RNSVGClipPathState() = default;

#ifdef ANDROID
  RNSVGClipPathState(RNSVGClipPathState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGDefsState {
public:
  RNSVGDefsState() = default;

#ifdef ANDROID
  RNSVGDefsState(RNSVGDefsState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGEllipseState {
public:
  RNSVGEllipseState() = default;

#ifdef ANDROID
  RNSVGEllipseState(RNSVGEllipseState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGForeignObjectState {
public:
  RNSVGForeignObjectState() = default;

#ifdef ANDROID
  RNSVGForeignObjectState(RNSVGForeignObjectState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGGroupState {
public:
  RNSVGGroupState() = default;

#ifdef ANDROID
  RNSVGGroupState(RNSVGGroupState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGSvgViewState {
public:
  RNSVGSvgViewState() = default;

#ifdef ANDROID
  RNSVGSvgViewState(RNSVGSvgViewState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGLinearGradientState {
public:
  RNSVGLinearGradientState() = default;

#ifdef ANDROID
  RNSVGLinearGradientState(RNSVGLinearGradientState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGLineState {
public:
  RNSVGLineState() = default;

#ifdef ANDROID
  RNSVGLineState(RNSVGLineState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGMarkerState {
public:
  RNSVGMarkerState() = default;

#ifdef ANDROID
  RNSVGMarkerState(RNSVGMarkerState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGMaskState {
public:
  RNSVGMaskState() = default;

#ifdef ANDROID
  RNSVGMaskState(RNSVGMaskState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGPathState {
public:
  RNSVGPathState() = default;

#ifdef ANDROID
  RNSVGPathState(RNSVGPathState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGPatternState {
public:
  RNSVGPatternState() = default;

#ifdef ANDROID
  RNSVGPatternState(RNSVGPatternState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGRadialGradientState {
public:
  RNSVGRadialGradientState() = default;

#ifdef ANDROID
  RNSVGRadialGradientState(RNSVGRadialGradientState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGRectState {
public:
  RNSVGRectState() = default;

#ifdef ANDROID
  RNSVGRectState(RNSVGRectState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGSymbolState {
public:
  RNSVGSymbolState() = default;

#ifdef ANDROID
  RNSVGSymbolState(RNSVGSymbolState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGTextState {
public:
  RNSVGTextState() = default;

#ifdef ANDROID
  RNSVGTextState(RNSVGTextState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGTextPathState {
public:
  RNSVGTextPathState() = default;

#ifdef ANDROID
  RNSVGTextPathState(RNSVGTextPathState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGTSpanState {
public:
  RNSVGTSpanState() = default;

#ifdef ANDROID
  RNSVGTSpanState(RNSVGTSpanState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

class RNSVGUseState {
public:
  RNSVGUseState() = default;

#ifdef ANDROID
  RNSVGUseState(RNSVGUseState const &previousState, folly::dynamic data){};
  folly::dynamic getDynamic() const {
    return {};
  };
  MapBuffer getMapBuffer() const {
    return MapBufferBuilder::EMPTY();
  };
#endif
};

} // namespace facebook::react